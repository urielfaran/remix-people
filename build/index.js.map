{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/routes/people.$personId.tsx", "../app/api/connect.ts", "../app/api/models/person.model.ts", "../app/api/models/group.model.ts", "../app/api/people.ts", "../app/components/groupsList.tsx", "../app/routes/groups.$groupId.tsx", "../app/api/groups.ts", "../app/components/peopleList.tsx", "../app/routes/groups._index.tsx", "../app/routes/people._index.tsx", "../app/routes/_index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\r\n * By default, Remix will handle generating the HTTP Response for you.\r\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\r\n * For more information, see https://remix.run/file-conventions/entry.server\r\n */\r\n\r\nimport { PassThrough } from \"node:stream\";\r\n\r\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\r\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport isbot from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext,\r\n  loadContext: AppLoadContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\"))\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import type { LinksFunction, MetaFunction } from \"@remix-run/node\";\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport appStylesHref from \"./app.css\";\n\nexport const meta: MetaFunction = () => {\n  return [\n  { title: \"Root | Root\" }];\n\n};\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: appStylesHref }];\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n      </body>\r\n    </html>);\n\n}", "import { ActionFunction, ActionFunctionArgs, redirect, type LoaderFunction } from \"@remix-run/node\";\r\nimport { Form, MetaFunction, useLoaderData } from \"@remix-run/react\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { deletePerson, getPersonById, type Person } from \"~/api/people\";\r\nimport GroupsList from \"~/components/groupsList\";\r\n\r\n\r\nexport const meta: MetaFunction = () => {\r\n    return [{ title: 'Person' }];\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n    invariant(params.personId, \"Missing person Id param\");\r\n    const person: Person = await getPersonById(params.personId);\r\n    console.log('fetching person... -->', person.name);\r\n    return person;\r\n}\r\n\r\nexport const action: ActionFunction = async ({ params }: ActionFunctionArgs) => {\r\n    invariant(params.personId, \"Missing contactId param\");\r\n    await deletePerson(params.personId);\r\n    return redirect(\"/people\");\r\n};\r\n\r\n\r\nexport default function Person() {\r\n    const person: Person = useLoaderData<typeof loader>();\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-3xl mb-20 text-center \">{person.name} </h1>\r\n            <div className=\"flex py-5 space-x-5\">\r\n                <GroupsList groups={person.groups} name=\"Groups\" />\r\n            </div>\r\n            <Form\r\n                method=\"post\"\r\n                onSubmit={(event) => {\r\n                    const response = confirm(\r\n                        \"Please confirm you want to delete this record.\"\r\n                    );\r\n                    if (!response) {\r\n                        event.preventDefault();\r\n                    }\r\n                }}\r\n            >\r\n                <button type=\"submit\" className=\"text-[red] m-20\">Delete</button>\r\n            </Form>\r\n        </div >\r\n    )\r\n}", "import mongoose from \"mongoose\";\r\nmongoose.set('strictQuery', false);\r\n\r\nexport async function dbConnect() {\r\n    await mongoose.connect(\"mongodb://127.0.0.1:27017/ServerSide\");\r\n    console.log(\"Connected\");\r\n}", "import mongoose, { Schema } from \"mongoose\";\r\n\r\nconst personSchema = new mongoose.Schema({\r\n    name: { type: String },\r\n    groups: {\r\n        type: [mongoose.Schema.Types.ObjectId],\r\n        ref: 'group'\r\n    }\r\n})\r\n\r\nexport const personModel = mongoose.models.person || mongoose.model('person', personSchema, 'Persons');\r\n", "import mongoose from \"mongoose\";\r\n\r\nconst groupSchema = new mongoose.Schema({\r\n  name: { type: String },\r\n  parent: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: \"group\",\r\n  },\r\n  child_groups: {\r\n    type: [mongoose.Schema.Types.ObjectId],\r\n    ref: \"group\",\r\n  },\r\n  people: {\r\n    type: [mongoose.Schema.Types.ObjectId],\r\n    ref: \"person\",\r\n  }\r\n});\r\n\r\nexport const groupModel =\r\n  mongoose.models.group || mongoose.model(\"group\", groupSchema, \"Groups\");\r\n", "import { dbConnect } from \"~/api/connect\";\r\nimport { personModel } from \"~/api/models/person.model\";\r\nimport type { Group } from \"./groups\";\r\nimport type { ObjectId } from \"mongodb\";\r\nimport { groupModel } from \"./models/group.model\";\r\n\r\nexport type Person = {\r\n  _id: ObjectId;\r\n  name: string;\r\n  groups?: Group[];\r\n}\r\n\r\nexport async function getAllPeople(name?: string | null) {\r\n  await dbConnect();\r\n  let people: Person[] = await personModel.find({}).populate({ path: \"groups\", model: groupModel });\r\n  if (name == null)\r\n    return people;\r\n  else\r\n    return people.filter(person => (\r\n      name ? person.name.toLowerCase().includes(name.toLowerCase()) : true\r\n    ));\r\n}\r\n\r\nexport async function getPersonById(id: string) {\r\n  const people = await personModel.findById(id).populate({ path: \"groups\", model: groupModel });\r\n  return people;\r\n}\r\n\r\nexport async function deletePerson(id: string) {\r\n  await personModel.findByIdAndDelete(id);\r\n}\r\n\r\nexport async function createPerson() {\r\n  await personModel.create({});\r\n}", "import { NavLink } from \"@remix-run/react\";\r\nimport { Group } from \"~/api/groups\";\r\n\r\ntype GroupsListProps = {\r\n    groups?: Group[];\r\n    name: string\r\n};\r\nexport default function GroupsList({ groups, name }: GroupsListProps) {\r\n    return (\r\n        <div className=\"flex-1 max-w-md m-20\">\r\n            <h3 className=\"text-3xl\">{name}:</h3>\r\n            <ul className=\"flex flex-col space-y-3 my-3\">\r\n                {groups?.[0] ?\r\n                    groups?.map((group) => (\r\n                        <li>\r\n                            <NavLink\r\n                                to={'/' + 'groups/' + group._id}\r\n                                prefetch=\"intent\"\r\n                                className={({ isActive }) =>\r\n                                    `w-full hover:underline p-3 rounded border border-slate-400 inline-block ${isActive\r\n                                        ? 'bg-slate-300 text-black font-bold border-2'\r\n                                        : 'text-blue-500 '\r\n                                    } `\r\n                                }\r\n                            >\r\n                                {group.name}\r\n                            </NavLink>\r\n                        </li>\r\n                    )) :\r\n                    <p className=\"text-2xl\">No {name}</p>\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { Group, getGroupById } from \"~/api/groups\";\r\nimport { type Person } from \"~/api/people\";\r\nimport GroupsList from \"~/components/groupsList\";\r\nimport PeopleList from \"~/components/peopleList\";\r\n\r\n\r\nexport const meta = (data: Person) => {\r\n    return [\r\n        { title: data.name },\r\n    ];\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n    invariant(params.groupId, \"Missing group Id param\");\r\n    const group: Group = await getGroupById(params.groupId);\r\n    console.log('fetching group... -->', group.name);\r\n    return group;\r\n}\r\n\r\nexport default function $Group() {\r\n    const group: Group = useLoaderData<typeof loader>();\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-3xl mb-20 text-center \">{group.name} </h1>\r\n            <GroupsList groups={group.child_groups} name=\"Child Groups\" />\r\n            <PeopleList people={group.people} name=\"Children\" />\r\n            <div className=\"text-xl m-20 max-w-md\">\r\n                <h3 className=\"text-3xl\">Parent:</h3>\r\n                {group.parent ?\r\n                    <NavLink\r\n                        to={'/' + 'groups/' + group.parent._id}\r\n                        title={group.parent.name}\r\n                        prefetch=\"intent\"\r\n                        className={({ isActive }) =>\r\n                            `w-full hover:underline p-3 rounded border border-slate-400 inline-block ${isActive\r\n                                ? 'bg-slate-300 text-black font-bold border-2'\r\n                                : 'text-blue-500 '\r\n                            } `\r\n                        }>\r\n                        <div>{group.parent.name}</div>\r\n                    </NavLink>\r\n                    :\r\n                    <p>No parent</p>\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}", "import { dbConnect } from \"~/api/connect\";\r\nimport { groupModel } from \"~/api/models/group.model\";\r\nimport { personModel } from \"./models/person.model\";\r\nimport type { Person } from \"./people\";\r\nimport type { ObjectId } from \"mongodb\";\r\n\r\nexport type Group = {\r\n    _id: ObjectId;\r\n    name: string;\r\n    parent?: Person;\r\n    child_groups?: Group[];\r\n    people?: Person[];\r\n}\r\nconst query = [\r\n    {\r\n        path: 'child_groups',\r\n        model: groupModel\r\n    },\r\n    {\r\n        path: 'people',\r\n        model: personModel\r\n    },\r\n    {\r\n        path: 'parent',\r\n        model: groupModel\r\n    }\r\n];\r\n\r\nexport async function getAllGroups(name?: string | null) {\r\n    await dbConnect();\r\n\r\n    const groups: Group[] = await groupModel.find({}).populate(query);\r\n    return groups.filter(group => (\r\n        name ? group.name.toLowerCase().includes(name.toLowerCase()) : true\r\n    ));\r\n}\r\n\r\n\r\nexport async function getGroupById(id: string) {\r\n    const people = await groupModel.findById(id).populate(query);\r\n    return people;\r\n}", "import { Form, NavLink } from \"@remix-run/react\";\r\nimport { Person } from \"~/api/people\";\r\n\r\ntype PeopleListProps = {\r\n    people?: Person[];\r\n    name?: string\r\n};\r\n\r\nexport default function PeopleList({ people, name }: PeopleListProps) {\r\n    return (\r\n        <div className=\"flex-1 max-w-md m-20\">\r\n            <h3 className=\"text-3xl\">{name ? name + \":\" : \"\"}</h3>\r\n            <ul className=\"flex flex-col space-y-3 my-3\">\r\n                {people?.[0] ?\r\n                    people?.map((person) => (\r\n                        <li>\r\n                            <NavLink\r\n                                to={'/' + 'people/' + person._id}\r\n                                prefetch=\"intent\"\r\n                                className={({ isActive }) =>\r\n                                    `w-full hover:underline p-3 rounded border border-slate-400 max-w-[10] inline-block ${isActive\r\n                                        ? 'bg-slate-300 text-black font-bold border-2'\r\n                                        : 'text-blue-500 '\r\n                                    } `\r\n                                }\r\n                            >\r\n                                {person.name}\r\n                            </NavLink>\r\n                        </li>\r\n                    )) :\r\n                    <p className=\"text-2xl\">No {name}</p>\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}", "import type { LoaderFunction, MetaFunction } from \"@remix-run/node\";\r\nimport { Form, Link, Outlet, useLoaderData } from \"@remix-run/react\";\r\nimport { getAllGroups, type Group } from \"~/api/groups\";\r\n\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [\r\n    { title: \"Groups | List\" },\r\n  ];\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const url = new URL(request.url);\r\n  const name = url.searchParams.get('name');\r\n  const groups: Group[] = await getAllGroups(name);\r\n  return groups;\r\n}\r\n\r\n\r\nexport default function GroupsIndex() {\r\n  const groups = useLoaderData<Group[]>();\r\n\r\n  return (\r\n    <div>\r\n      <body>\r\n        <div id=\"sidebar\">\r\n          <h1>People List</h1>\r\n          <div>\r\n            <Form id=\"search-form\" role=\"search\">\r\n              <label className=\"font-bold\">\r\n                <input\r\n                  type=\"search\"\r\n                  name=\"name\"\r\n                  placeholder=\"Type a name...\"\r\n                  className=\"border-2 rounded py-2 px-3\"\r\n                />\r\n              </label>\r\n            </Form>\r\n            <Form method=\"post\">\r\n              <button type=\"submit\">New</button>\r\n            </Form>\r\n          </div>\r\n          <nav>\r\n            <ul>\r\n              {groups.map((group) => (\r\n                <li key={group._id}>\r\n                  <Link to={group._id}>{group.name}</Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <div id=\"detail\">\r\n          <Outlet />\r\n        </div>\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n", "import { json, type ActionFunction, type ActionFunctionArgs, type LoaderFunction, type MetaFunction } from \"@remix-run/node\";\r\nimport { Form, Link, Outlet, useLoaderData } from \"@remix-run/react\";\r\nimport { createPerson, getAllPeople, type Person } from \"~/api/people\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [\r\n    { title: \"People | List\" },\r\n  ];\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const url = new URL(request.url);\r\n  const name = url.searchParams.get('name');\r\n  const people: Person[] = await getAllPeople(name);\r\n  return people;\r\n}\r\n\r\nexport const action: ActionFunction = async () => {\r\n  const contact = await createPerson();\r\n  return json({ contact });\r\n}\r\n\r\n\r\nexport default function PeopleIndex() {\r\n  const people = useLoaderData<Person[]>();\r\n\r\n  return (\r\n    <div>\r\n      <body>\r\n        <div id=\"sidebar\">\r\n          <h1>People List</h1>\r\n          <div>\r\n            <Form id=\"search-form\" role=\"search\">\r\n              <label className=\"font-bold\">\r\n                <input\r\n                  type=\"search\"\r\n                  name=\"name\"\r\n                  placeholder=\"Type a name...\"\r\n                  className=\"border-2 rounded py-2 px-3\"\r\n                />\r\n              </label>\r\n            </Form>\r\n            <Form method=\"post\">\r\n              <button type=\"submit\">New</button>\r\n            </Form>\r\n          </div>\r\n          <nav>\r\n            <ul>\r\n              {people.map((person) => (\r\n                <li key={person._id}>\r\n                  <Link to={person._id}>\r\n                    {person.name ?\r\n                      person.name :\r\n                      <i>No Name</i>}\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <div id=\"detail\">\r\n          <Outlet />\r\n        </div>\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\n", "import { LinksFunction } from \"@remix-run/node\";\nimport { MetaFunction, NavLink } from \"@remix-run/react\";\nimport styles from '../tailwind.css';\n\nexport const meta: MetaFunction = () => {\n  return [\n  { title: \"People | Groups\" }];\n\n};\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: styles }];\n};\n\nexport default function Index() {\n  return (\n    <div className=\"text-center\">\r\n            <NavLink\n        to={'/people'}\n        className=\"text-5xl font-bold text-center m-10\">\n        \r\n                People\r\n            </NavLink>\r\n            <NavLink\n        to={'/groups'}\n        className=\"text-5xl font-bold text-center m-10\">\n        \r\n                Groups\r\n            </NavLink>\r\n        </div>);\n\n}", "export default {'entry':{'module':'/build/entry.client-YEIKNGSS.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-LLSFN2D5.js','/build/_shared/chunk-ZYOVMMKZ.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-E334RBZH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-6H4CRSBE.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/groups.$groupId':{'id':'routes/groups.$groupId','parentId':'root','path':'groups/:groupId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/groups.$groupId-FU3LXMKI.js','imports':['/build/_shared/chunk-LRVF3ZA5.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/groups._index':{'id':'routes/groups._index','parentId':'root','path':'groups','index':true,'caseSensitive':undefined,'module':'/build/routes/groups._index-I4IF5RAY.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/people.$personId':{'id':'routes/people.$personId','parentId':'root','path':'people/:personId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/people.$personId-HFTMC5Q2.js','imports':['/build/_shared/chunk-LRVF3ZA5.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/people._index':{'id':'routes/people._index','parentId':'root','path':'people','index':true,'caseSensitive':undefined,'module':'/build/routes/people._index-KDIH76Z7.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false}},'version':'74777257','hmr':{'runtime':'/build/_shared\\\\chunk-ZYOVMMKZ.js','timestamp':1698594636175},'url':'/build/manifest-74777257.js'};", "\nimport * as entryServer from \"D:\\\\\u05D0\u05D5\u05E8\u05D9\u05D0\u05DC\\\\\u200F\u200Fremix-mongodb - copy\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/people.$personId.tsx\";\nimport * as route2 from \"./routes/groups.$groupId.tsx\";\nimport * as route3 from \"./routes/groups._index.tsx\";\nimport * as route4 from \"./routes/people._index.tsx\";\nimport * as route5 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/people.$personId\": {\n      id: \"routes/people.$personId\",\n      parentId: \"root\",\n      path: \"people/:personId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/groups.$groupId\": {\n      id: \"routes/groups.$groupId\",\n      parentId: \"root\",\n      path: \"groups/:groupId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/groups._index\": {\n      id: \"routes/groups._index\",\n      parentId: \"root\",\n      path: \"groups\",\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/people._index\": {\n      id: \"routes/people._index\",\n      parentId: \"root\",\n      path: \"people\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "meta", "mongoose", "mongoose", "jsxDEV", "jsxDEV", "meta", "loader", "meta", "NavLink", "useLoaderData", "invariant", "NavLink", "jsxDEV", "jsxDEV", "meta", "loader", "invariant", "useLoaderData", "NavLink", "loader", "meta", "Form", "Outlet", "useLoaderData", "jsxDEV", "meta", "loader", "useLoaderData", "Form", "Outlet", "action", "loader", "meta", "Form", "Link", "Outlet", "useLoaderData", "jsxDEV", "meta", "loader", "action", "useLoaderData", "Form", "Link", "Outlet", "links", "meta", "NavLink", "jsxDEV", "meta", "links", "NavLink"]
}
